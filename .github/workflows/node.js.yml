# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: "Node.js Package installation"
      run: npm install --silent

    - name: 'Login to GitHub Container Registry'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GHCR_ACCESSTOKEN}}

    - name: 'Build Inventory Image'
      run: |
        docker build . --tag ghcr.io/${{github.actor}}/latihan-cicd:latest
        docker push ghcr.io/${{github.actor}}/latihan-cicd:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Spin up container using new docker image
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSHHOST }}
          username: ${{ secrets.SSHUSER }}
          key: ${{ secrets.SSHKEY }}
          port: ${{ secrets.SSHPORT }}
          script: |
            echo ${{ secrets.GHCR_ACCESSTOKEN }} | docker login ghcr.io --username ${{ github.actor }} --password-stdin
            docker pull ghcr.io/${{ github.actor }}/latihan-cicd:latest
            docker container rm -f latihan-cicd
            docker run -e PORT=3000 -p 3000:3000 -d --name latihan-cicd ghcr.io/${{github.actor}}/latihan-cicd:latest
  
